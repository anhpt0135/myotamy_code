createdAt: "2019-11-20T07:22:57.145Z"
updatedAt: "2019-11-25T07:24:14.177Z"
type: "MARKDOWN_NOTE"
folder: "c59adf556f2f145052fd"
title: "Linux Programming"
tags: []
content: '''
  # Linux Programming
  ## Chapter 3: All About Bootloader
  ### 1.Bootloader dung de lam gi?
  
  Bootloader co hai chuc nang: 
  - *Khoi tao he thong co ban*
  - *load kernel*
  Khi cap nguon hoac reset, he thong trong trang thai rat toi thieu (very minimal state). Thong thuong, cac tai nguyen duy nhat hoat dong tai thoi diem ban dau la mot loi CPU don (single CPU core) va bo nho static tren chip. Ket qua la, system boostrap bao gom mot vai doan ma code voi cac pha (phases of code) ma moi pha se dem them he thong vao hoat dong.
  ### 2. The boot sequence (Qua trinh boot)
  Reset vector o vi tr 0xFFFFFFFF la vi tri tren cung cua vung nho flash chua mot doan ma lenh (ROM code) nhay den vi tri bat dau cua bootloader code (SPL/MLO).
  **Phase 1: ROM code**
  The ROM code co kha nang loading mot doan code nho tu mot vai vi tri duoc lap trinh san vao SRAM nam trong SoC. 
  Vi du: Trong TI OMAP va Sitara chips ROM code se load mot vai doan cua NAND flash memory, hoac sector(khu vuc) dau tien cua MMC (eMMC chip hoac SD card), hoac tu Ethernet, USB, UART.
  Hau het embedded SoCs co ROM code hoat dong giong nhau. Trong SOCs, khi ma bo nho SRAM khong du lon de load toan bo bootloader nhu U-boot, do do phai co mot bo loader trung gian goi la SPL/MLO(Second stage Program Loader).
  
  ![Image_Title](/home/anhpt/Hubble/myotamy_code/BoostNote/image/phase1.png)
  
  **Phase 2: SPL**
  Nhiem vu cua SPL la cai dat bo dieu khien bo nho (memory controller) va cac phan quan trong khac cua he thong chuan bi cho viec loading third stage program loader (TPL) vao main memory (DRAM).
  ![Image_Title](/home/anhpt/Hubble/myotamy_code/BoostNote/image/phase2.png)
  
  Sau khi ket thuc phase 2, the third stage program loader xuat hien trong DRAM, va the SPL co the nhay den vi tri do.
  
  **Phase 3: TPL**
  Luc nay, toan bo bootloader chang han U-boot hay Barebox. Thong thuong, co mot giao dien command-line cho nguoi dung co the tien hanh load new boot va kernel images vao bo nho flash.
  ![Image_Title](/home/anhpt/Hubble/myotamy_code/BoostNote/image/phase3.png)
  
  Tai thoi diem ket thuc cua Phase 3, kenel nam trong bo nho SDRAM va doi de bat dau chay. Embedded bootloader thuong duoc giai phong khoi bo nho khi kernel dang chay.
  
  ### 3. Moving from bootloader to kernel
  
  Khi the bootloader truyen viec dieu khien den kernel, no phai truyen mot vai thong tin den kernel bao gom:
  * Doi voi PowerPC va ARM architectures: mot so duy nhat doi voi mot loai SoC.
  * Thong tin co ban cua hardware: kich thuoc va vi tri cua bo nho RAM vat ly va toc do CPU clock.
  * The kernel command line.
  * tuy chon (co the co hoac khong), vi tri va kich thuoc cua mot device tree binary
  * tuy chon, vi tri va kich thuoc cua mot initial RAM disk.
  
  The kernel command line la mot chuoi ASCII don gian dieu khien bieu hien cua Linux, viec cai dat, vi du, mot thiet bi chua the root filesystem. Thong thuong, root filesytem duoc cung cap nhu mot RAM disk.
  
  Viec su dung rong rai cac du lieu nen tang (platform data) khac nhau dong nghia voi viec moi device phai co mot kernel duoc cau hinh va sua doi cho nen tang do, tu do device tree duoc ra doi.
  
  ### 4. Gioi thieu ve device trees
  
  Mot device tree la mot cach linh hoat de dinh nghia cac thanh phan hardware cua mot he thong may tinh. Thong thuong, device tree duoc load boi bootloader va truyen toi kernel.
  
  The Linux kernel chua mot so luong lon cac file nguon device tree trong **arch/$ARCH/boot/dts**
  Cung co mot so luong file nguon device tree trong the U-boot source code trong **arch/ARCH/dts.**
  **Neu ban co duoc hardware tu mot ben thu 3, the dts file phai duoc gui chod ban cung voi cac source files khac.**
  
  The device tree bieu dien mot he thong may tinh nhu mot tap hop cua cac thanh phan lien ket voi nhau trong mot he thong phan cap.
  
  The devcice tree bat dau bang mot root node, ki hieu la /, chua cac nodes con bieu dien hardware cua he thong. Moi node co mot ten va chua mot so thuoc tinh theo cu phap *name = "value"*. 
  
  Vi du:
  
  ```
  /dts-v1/;
  /{
    model = "TI AM335x BeagleBone";
    compatible = "ti,am33xx";
    #address-cells = <1>;
    #size-cells = <1>;
    cpus {
      #address-cells = <1>;
      #size-cells = <0>;
      cpu@0 {
        compatible = "arm,cortex-a8";
        device_type = "cpu";
        reg = <0>;
      };
    };
    memory@0x80000000{
      device_type = "memory";
      reg = <0x80000000 0x20000000>; /*512 MB*/
    };
  };
  ```
  
  De hieu hon cua truc cua device tree, tham khao them sach [mastering embedded linux](https://drive.google.com/file/d/1CF_KTuvxOnLIjk-kQNuXqLdzCEkiEXne/view?usp=sharing) trang 48.
  
  ### 5.Device tree include files
  
  Co ra nhieu diem chung ve hardware giua cac SoCs trong cung mot family va giua cac boards su dung cung mot SoC. Do do, device tree tach nhung phan chung vao include files, thong thuong voi duoi *.dtsi*. Tieu chua Open Firmware (the open firmware standard) dinh nghia /include/ nhu la mot co che duoc su dung nhu trong vi du sau:
   */include/ "vexpress-v2m.dtsi"*
   
   Nhin qua *.dts* files trong kernel, co the thay tu khoa include duoc dung nhu trong C:
   *#include "am33xx.dtsi"
    #include "am335x-bone-common.dtsi"*
  
  Duoi day la mot vi du trong file am33xx.dtsi:
  *#include <dt-bindings/gpio/gpio.h>
   #include <dt-bindings/pinctrl/am33xx.h>*
   
  Cuoi cung, dt-bindings/pinctrl/am33xx.h chua C macro thong thuong:
   
   *#define PULL_DISABLE (1 << 3)
    #define INPUT_EN (1 << 5)
    #define SLEWCTRL_SLOW (1 << 6)
    #define SLEWCTRL_FAST 0*
    
  Tat ca nhung dieu nay duoc giai quyet khi the device tree sources duoc build bang kernel kbuild. Kernel kbuild truoc tien chay chung (device tree sources) bang C pre-processor, khi do cac #include va #define se duoc xu ly thanh cac text don gian phu hop voi the device tree compiler. **=>** The device tree sources co the su dung cac dinh nghia hang so giong nhau voi the kernel code.
  
  Khi ta include cac files theo cach tren thi cac nodes duoc phu len tren cac nodes khac de tao thanh mot cay tong hop (composite tree) ma o do lop ngoai se mo rong hoac dieu chinh lai cac lop trong. 
  Vi du: am33xx.dtsi la file tong quat cho tat cac am33xx SoCs, dinh nghia MMC controller interface dau tien nhu sau:
  
  ```
  mmc1: mmc@48060000 {
    compatible = "ti, omap4-hsmmc";
    ti, hwmods = "mmc1";
    ti, dual-volt;
    ti, needs-special-reset;
    ti, needs-special-hs-handling;
    dmas = <&edma 24 &edma 25>;
    dma-names = "tx", "rx";
    interrupts = <64>;
    interrupt-parent = <&intc>;
    reg = <0x48060000 0x1000>;
    status = "disabled";
  };
  ```
  
  **NOTE:** The status = "disabled" nghia la khong co device driver nao nen rang buoc voi no, va dong thoi no co label mmc1.
  
  Trong am335x-bone-common.dtsi duoc included voi BeagleBone va BeagleBone black, mot node giong nhau duoc tham chieu boi phandle cua no.
  
  ```
  &mmc1 {
    status = "okay";
    bus-width = <0x4>;
    pinctrl-names = "default";
    pinctrl-0 = <&mmc1_pins>;
    cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
    cd-inverted;
  };
  ```
  O day, mmc1 duoc enabled (status = "okay") boi vi ca hai board deu co mot mcc1 device va pinctrl duoc thiet lap. Sau do, trong file am335x-boneblack.dts, se co mot tham chieu khac tro den mmc1 tuong ung voi mot voltage regulator:
  
  ```
  &mmc1 {
    vmmc-supply = <&vmmcsd_fixed>;
  };
  ```
  
  **==>Do do, viec xep theo lop cac source files giong nhu tren se giup linh hoat va giam viec lap lai code**
  
  ### 6.Compile a device tree
  
  The bootloader va kernel yeu cau mot file binary cua device tree, do do device tree can phai duoc bien dich bang the device tree compiler, dtc. Ket qua la tao ra file device tree binary .dtb.
  
  dtc nam trong thu muc *scripts/dtc/dtc* cua Linux source, co the dung dtc de compile mot simple device tree (nhung file dts khong su dung #include):
  
  ```
  $ dtc simpledts-1.dts -o simpledts-1.dtb
  DTC: dts->dts on file "simpledts-1.dts"
  ```
  
  De co the compile cac file phuc tap hon, can phai su dung kernel kbuild se duoc gioi thieu trong chapter tiep theo.
  
  ### 7. Choosing a bootloader
  
  Co nhieu loai bootloaders khac nhau:
  | Name | Architectures |
  |:--|:--|
  | Das U-Boot | ARM, Blackfin, MIPS, PowerPC, SH |
  | Barebox | ARM, Blackfin, MIPS, PowerPC |
  | GRUB 2 | X86, X86_64 |
  | RedBoot | ARM, MIPS, PowerPC, SH |
  | CFE | Broadcom MIPS |
  | YAMON | MIPS |
  
  Chung ta se tap trung vao U-Boot (ten day du la Das U-Boot) vi no supports nhieu processor architectures.
  Co the ban se nhan duoc mot bootloader cung voi SoC hoac board cua ban, tuy nhien, co the ban muon su dung open source bootloader thay vi su dung tu nha cung cap.
  
  #### Building U-Boot:
   ```
  $ git clone git://git.denx.de/u-boot.git
  $ cd u-boot
  $ git checkout v2015.07
   ```
  Co hon 1000 file config cho nhung common development boards va devices trong thu muc *configs/*. Trong hau het cac truong hop, co the doan file nao can dung bang theo ten file va co the co nhieu thong tin chi tiet hon trong README files o thu muc *board/*, hoac co the tim them thong tin tren cac website hay forum huong dan.
  
  Vi du: Trong truong hop su dung board BeagleBone Black, co the tim duoc mot file ten *am335x_boneblack_defconfig* trong thu muc *configs/* va chung ta co the tim duoc dong chu **The binary produced by this board supports...Beaglebone Black** trong *board/ti/am335x/README*. Voi nhung thong tin nay, viec build U-boot for BeagleBone Black that don gian. (NOTE: make [board]_defconfig_)
  
  ```
  $ make CROSS_COMPILE=arm-cortex_a8-linux-gnueabihf- am335x_boneblack_defconfig
  $ make CROSS_COMPILE=arm-cortex_a8-linux-gnueabihf-
  ```
  Ket qua la tao ra file u-boot.bin, u-boot.img... va co mot file MLO (SPL).
  u-boot.img : This is u-boot.bin with a U-Boot header added, suitable for uploading to a running copy of U-Boot
  
  #### Cai dat U-boot:
  Mot so SoCs co boot ROM co the doc duoc boot code tu SD cards, serial interfaces, USB...
  Doi voi chip AM335x trong BeagleBone Black, co the load U-boot thong qua micro-SD card.
  
  #### Booting Linux
  
  Su dung command *bootm* de bat dau khoi chay kernel image:
  
  *bootm [address of kernel] [address of ramdisk] [address of dtb]*
  
  Dia chi cua kernel la can thiet, nhung co the bo qua dia chi cua ramdisk va dtb neu cau hinh kernel (kernel configuration) khong can chung. Neu co dtb nhung khong co ramdisk thi co the thay the vi tri thu 2 bang dau -:
  *bootm 82000000 - 8300000*
  
  ### 8.Porting U-Boot to a new board
  
  Gia su ban tao ra mot board moi ten la "Nova" dua tren BeagleBone Black va ban can phai port U-Boot vao no. Tu ban phat hanh U-boot 2014.10, moi board co mot file Kconfig chua cac thong tin toi thieu duoc tao ra tu file cu boards.cfg.
  Nhung thu muc ban can phai de y la:
  * arch: chua ma code dac trung cho cac kien truc duoc ho tro nhu: arm, mips, powerpc...De y co thu muc arch/arm/cpu doi voi arm architecture se chua cac thu muc con cho armv7, armv8...
  * board: chua cac code dac trung cua mot board. Vi du: board/ti/am335x.
  * common: chua cac ham cot loi bao gom command shells va cac commands co the gio tu no, moi command trong mot file co ten *cmd_[command name].c*
  * include: ngoai cac shared header files, thu muc nay chua mot thu muc con rat quan trong *include/configs* noi ban co the tim ra cac cau hinh cai dat cua mot board. Cac cau hinh cai dat da duoc di chuyen toi Kconfig file.
  
  #### Kconfig and U-Boot
  Cach thuc ma Kconfig giai nen cac thong tin cau hinh tu Kconfig files va luu vao file *.config* se duoc thao luan trong chuong 4, Porting and Configuring the Kernel. U-boot da thong qua kconfig va kbuild voi mot thay doi, mot U-boot co the tao ra dden 3 file binaries:*a normal u-boot.bin, a Secondary Program Loader (SPL) va mot Tertiary Program Loader(TPL)*.
  
  |None|Normal image only|
  |:--|:--|
  | S:| SPL image only|
  |T:| TPL image only|
  |ST:| SPL and TPL images|
  |+S:| Normal and SPL images|
  |+T:| Normal and TPL images|
  |+ST:| Normal, SPL and TPL images|
  
  Moi board co mot file cau hinh mac dinh dat trong thu muc *configs/[board name]_defconfig*.
  **Doi voi Nova Board, ban can tao ra file ten nova_defconfig va them vao nhung dong sau:**
  
  ```c
  CONFIG_SPL=y
  CONFIG_SYS_EXTRA_OPTIONS="SERIAL1, CONS_INDEX=1, EMMC_BOOT"
  +S:CONFIG_ARM=y
  +S:CONFIG_TARGET_NOVA=y
  ```
  Line 1: tao ra SPL binary file co ten la MLO
  Line 3: noi dung cua file *arch/arm/Kconfig* duoc included.
  Line 4: chon board cua ban
  Luu y: line 3 va 4 deu co +S nghia la file SPL va normal u-boot.bin duoc tao ra.
  
  **Trong file *arch/arm/Kconfig* them vao nhung dong sau:**
  ```c
  CONFIG_SPL=y
  config TARGET_NOVA
  bool "Support Nova!"
  ```
  #### Board-specific files
  Moi board co mot thu muc con *board/[board name]* hoac *board/[vendor]/[board name]* chua nhung file sau:
  * Kconfig: chua cac tuy chon cau hinh cho board
  * MAINTAINERS:
  * Makefile: de build board-specific code
  * README:
  Ngoai ra se co cac source files cho cac ham dac trung cua board.
  
  **Doi voi board Nova, dua tren board BeagleBone, dong thoi board nay dua tren TI AM335x EVM, do do, ban co the bat dau bang cach sao chep lai cac file cua am335x board:**
  
  ```shell
  $ mkdir board/nova
  $ cp -a board/ti/am335x board/nova
  ```
  **Tiep theo thay doi file Kconfig de mo ta ve Nova board:**
  ```c
  if TARGET_NOVA
  
  config SYS_CPU
  default "armv7"
  
  config SYS_BOARD
  default "nova"
  
  config SYS_SOC
  default "am33xx"
  
  config SYS_CONFIG_NAME
  default "nova"
  endif
  ```
  SYS_CPU: armv7 ==> code trong *arch/arm/cpu/armv7* duoc compiled va linked.
  SYS_BOARD: nova ==> cac setting se dua vao *board/nova*.
  SYS_SOC: am33xx ==> code trong *arch/arm/cpu/armv7/am33xx* duoc included.
  SYS_CONFIG_NAME: nova ==> header files **include/configs/nova.h** duoc su dung cho cac tuy chon cau hinh khac.
  
  **Ngoai file Kconfig trong thu muc board/nova, file u-boot.lds trong folder nay cung can duoc thay doi tu viec hard-coded tham chieu toi board/ti/am33x/built-in.o thanh board/nova/built-in.o.** 
  
  #### Configure header file
  Moi board co mot header file trong include/configs chua phan lon cac cai dat cau hinh. Format cua file nay duoc mo ta trong README file trong U-Boot source tree.
  
  **Doi voi Nova board, chi can copy file am335x_evm.h den nova.h va thay doi mot so noi dung sau:
   ```c
   #ifndef __CONFIG_NOVA
   #define __CONFIG_NOVA
   #define CONFIG_SYS_LDSCRIPT "board/nova/u-boot.lds"
   #undef CONFIG_SYS_PROMPT
   #define CONFIG_SYS_PROMPT "nova!> "
   ```
   
   #### Building and testing
   ```shell
   $ make CROSS_COMPILER=arm-cortex_a8-linux-gnueabi- nova_defconfig
   $ mkae CROSS_COMPILER=arm-cortex_a8-linux-gnueabi-
   ```
   **Copy MLO and u-boot.img vao FAT partition cua micro-SD card.**
  
  Tim hieu them: Porting U-boot to a new board:
  [link1](http://portinguboottoanewboard.blogspot.com/)
  [link2](https://archive.fosdem.org/2018/schedule/event/state_of_the_art_uboot/attachments/slides/2051/export/events/attachments/state_of_the_art_uboot/slides/2051/fosdem_2018_u_boot.pdf)
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
